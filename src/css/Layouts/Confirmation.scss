@use "../global/variable.scss" as *;
@use "../global/pre-sets.scss" as *;
@use "../global/classes.scss" as *;

$Products-Size-Collumn: 1fr;
$Product-Size-Collumn: 1fr;

.Confirmation{

  & > .Content{

    display: grid;
    grid-template-columns: repeat(1, $Products-Size-Collumn);
    grid-template-rows: auto auto auto 1fr;

    align-content: start;

    gap: $rem-large;

    & > .Form{

      display: grid;
      grid-template-columns: repeat(2, $Products-Size-Collumn);

      gap: $rem-medium;

      @media screen and (max-width: $Mobile-Size) {

        grid-template-columns: repeat(1, $Products-Size-Collumn);

      }

      // background-color: aqua;

      // grid-template-rows: 300px 300px 300px;

      & > .SubFrom{

        display: grid;
        grid-template-columns: repeat(1, $Products-Size-Collumn);

        gap: $rem-medium;

        justify-content: stretch;
        // align-content: end;
        align-content: start;
        justify-items: stretch;
        align-items: start;

        // background-color: red;

        & > *{
          // width: 100%;
          // background-color: violet
        }

        // & > .Title{
        //   @extend .Flex, .WH-Default, .Collumn;

        //   & > .Text{
        //     @extend .Flex, .WH-Default, .Collumn;

        //   }

        // }

        & > .Title{

        }

        & > .Label{

        }

        & > .Input-Text{
          height: 3rem;
          border: none;
          padding: 0 1rem;
          
        }

        & > .GroupCheck{
          @extend .Flex, .WH-Default, .Flex-Center;

          justify-content: flex-start;

          min-height: 3rem;

          flex-wrap: wrap;

          & > .Check{
            @extend .Flex, .WH-Auto, .Flex-Center;

            & > .Label{

            }

            & > .Input{

            }

          }
          
        }

        & > .Check{
          @extend .Flex, .WH-Auto, .Flex-Center;

          justify-content: flex-start;

          min-height: 3rem;

          & > .Label{

          }

          & > .Input{

          }

        }
      }

      // & > .SubForm-Check{
      //   @extend .Flex, .WH-Default, .Collumn, %Bottom-Margin-Children-Medium;

      //   & > .Title{
      //     @extend .Flex, .WH-Default;

      //     & > .Text{
      //       @extend .Flex, .WH-Default;

      //     }

      //   }

      //   & > .GroupCheck{
      //     @extend .Flex, .WH-Default, %Bottom-Margin-Children-Medium;

      //     flex-wrap: wrap;

      //     & > .Check{
      //       @extend .Flex, .WH-Auto, .Flex-Center;

      //       & > .Label{
      //         @extend .Flex, .WH-Auto;
      //       }

      //       & > .Input{
      //         @extend .Flex, .WH-Auto;
      //       }

      //     }
          
      //   }

      // }

      // & > .SubForm-Troco{
      //   @extend .Flex, .WH-Default, %Bottom-Margin-Children-Medium;

      //   flex-wrap: wrap;

      //   & > .Title{
      //     @extend .Flex, .WH-Default, .Collumn;

      //     & > .Text{
      //       @extend .Flex, .WH-Default, .Collumn;

      //     }

      //   }

      //   & > .Check{
      //     @extend .Flex, .WH-Auto, .Flex-Center;
        
      //     & > .Label{
      //       @extend .Flex, .WH-Auto;
      //     }

      //     & > .Input-CheckBox{
      //       @extend .Flex, .WH-Auto;
      //     }

      //   }

      //   & > .Input-Text{
      //     @extend .Flex, .WH-Default;

      //     width: calc(100% - (2 * 1px) - (2 * 1rem));
      //     height: 3rem;
      //         border: none;
      //     // border: 1px solid $Color-Black;
      //     padding: 0 1rem;

      //   }

      // }

    }
        
    & > .Data{
      @extend .Flex, .WH-Auto, .Flex-Center;

    }
      
    & > .PageControllers{
      @extend .Flex, .Flex-Center, .WH-Default, %Right-Margin-Children-Large;

        height: 4rem;
      
      & > .Button {
        @extend .Flex, .Flex-Center, .WH-Default, .Button-Default;

        height: 4rem;
      }
    }

    & > .Products{

      display: grid;
      grid-template-columns: repeat(2, $Products-Size-Collumn);
      grid-template-rows: repeat(auto-fill, calc($imageSize + 2 * $rem-large));

      gap: $rem-large;

      @media screen and (max-width: $Mobile-Size) {

        grid-template-columns: repeat(1, $Products-Size-Collumn);

      }

      & > .Product-Horizontal{

        display: grid;
        grid-template-columns: $imageSize $Product-Size-Collumn;
        grid-template-rows: $imageSize;

        gap: $rem-large;
        
        padding: $rem-large;

        background-color: $Color-White;

        box-shadow: 1px 1px 1px $Color-Gainsboro;

        & > .Image{
          width: 100%;
          height: 100%;
      
          & > .Img{
            width: 100%;
            height: 100%;
          }

        }

        & > .Information{

          display: grid;
          grid-template-columns: $Product-Size-Collumn;
          grid-template-rows: repeat(3, auto);

          justify-content: center;
          align-content: center;

          & > .Title{

            & > .Text{
              @extend .Name-Size;

            }

          }
          
          & > .Description{
            @extend .Flex;

            & > .Text{
              @extend .Ellipse;

            }
          }

          & > .Data{
            @extend .Flex, .WH-Default, .Data-Size ;
            
            flex-wrap: wrap;
          
            & > .Price{

              @extend .Flex, .WH-Auto;
              
              & > .Label{

                @extend .Flex, .WH-Auto;

              }

              & > .Text{

                @extend .Flex, .WH-Auto;

              }
            }
            
            & > .Count{
              @extend .Flex, .WH-Auto;
            
              & > .Label{

                @extend .Flex, .WH-Auto;

              }

              & > .Text{

                @extend .Flex, .WH-Auto;

              }

            }
            
            & > .Total{
              @extend .Flex, .WH-Auto;
            
              & > .Label{

                @extend .Flex, .WH-Auto;

              }

              & > .Text{

                @extend .Flex, .WH-Auto;

              }

            }

          }

        }

      }

    }
    
  }

}