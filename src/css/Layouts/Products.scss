@use "../global/variable.scss" as *;
@use "../global/pre-sets.scss" as *;
@use "../global/classes.scss" as *;

$Products-Size-Collumn: 1fr;
$Product-Size-Collumn: 1fr;

.Store{

  & > .Content{

    display: grid;
    grid-template-columns: repeat(2, $Products-Size-Collumn);
    grid-template-rows: repeat(auto-fill, calc($imageSize + 2 * $rem-large));

    gap: $rem-large;

    @media screen and (max-width: $Mobile-Size) {

      grid-template-columns: repeat(1, $Products-Size-Collumn);

    }

    & > .Product-Horizontal{

      display: grid;
      grid-template-columns: $imageSize $Product-Size-Collumn;
      grid-template-rows: $imageSize;

      gap: $rem-large;
      
      padding: $rem-large;

      background-color: $Color-White;

      box-shadow: 1px 1px 1px $Color-Gainsboro;

      & > .Image{
        width: 100%;
        height: 100%;
    
        & > .Img{
          width: 100%;
          height: 100%;
        }

      }

      & > .Information{

        display: grid;
        grid-template-columns: $Product-Size-Collumn;
        grid-template-rows: repeat(3, auto);

        justify-content: center;
        align-content: center;

        & > .Title{

          & > .Text{
            @extend .Name-Size;

          }

        }
        
        & > .Description{
          @extend .Flex;

          & > .Text{
            @extend .Ellipse;

          }
        }

        & > .Data{
          @extend .Flex, .WH-Default, .Data-Size ;
          
          flex-wrap: wrap;
        
          & > .Price{

            @extend .Flex, .WH-Auto;
            
            & > .Label{

              @extend .Flex, .WH-Auto;

            }

            & > .Text{

              @extend .Flex, .WH-Auto;

            }
          }
          
          & > .Count{
            @extend .Flex, .WH-Auto;
          
            & > .Label{

              @extend .Flex, .WH-Auto;

            }

            & > .Text{

              @extend .Flex, .WH-Auto;

            }

          }

        }

      }

    }

  }

}